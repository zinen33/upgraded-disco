module.exports.config = {
	name: "tx2",
	version: "0.0.1",
	hasPermssion: 0,
	credits: "WhoisHakira stolen form lorenBot(MinhHuyDev)",
	description: "Ch∆°i t√†i x·ªâu",
	commandCategory: "gi·∫£i tr√≠",
    usages: "taixiu [t√†i/x·ªâu] [s·ªë ti·ªÅn]",
    cooldowns: 0
};
const axios = require('axios');
var bdsd = true;
var tilethang = 1;
var tilethangb3dn = 10;
var tilethangb2dn = 5;
var timedelay = 2;
var haisogiong = 2;
var basogiong = 3;
var motsogiong = 1;
function replace(int){
    var str = int.toString();
    var newstr = str.replace(/(.)(?=(\d{3})+$)/g,'$1,');
    return newstr;
}
function getImage(number){
    switch (number){
        case 1: return "https://i.imgur.com/ruaSs1C.png";
        case 2: return "https://i.imgur.com/AIhuSxL.png";
        case 3: return "https://i.imgur.com/JB4vTVj.png";
        case 4: return "https://i.imgur.com/PGgsDAO.png";
        case 5: return "https://i.imgur.com/RiaMAHX.png";
        case 6: return "https://i.imgur.com/ys9PwAV.png";
    }
}
function getRATE(tong){
    if(tong == 4) var rate = 40;
    if(tong == 5) var rate = 35;
    if(tong == 6) var rate = 33.33;
    if(tong == 7) var rate = 25;
    if(tong == 8) var rate = 20;
    if(tong == 9) var rate = 16.66;
    if(tong == 10) var rate = 14.28;
    if(tong == 11) var rate = 12.5;
    if(tong == 12) var rate = 11.11;
    if(tong == 13) var rate = 10;
    if(tong == 14) var rate = 9.09;
    if(tong == 15) var rate = 8.33;
    if(tong == 16) var rate = 7.69;
    if(tong == 17) var rate = 7.14;
    return rate
}
module.exports.run = async function ({ event, api, Currencies, Users, args }) {
    try{
    const moment = require("moment-timezone");
    const format_day = moment.tz("Asia/Ho_Chi_Minh").format("HH:mm:ss - DD/MM/YYYY");
    const thinh = ["C·ªù b·∫°c l√† b√°c th·∫±ng b·∫ßn", "B·∫°n ch∆°i, b·∫°n th·∫Øng, b·∫°n ch∆°i, b·∫°n thua. B·∫°n l·∫°i ti·∫øp t·ª•c ch∆°i.", "Ng∆∞·ªùi kh√¥ng ch∆°i l√† ng∆∞·ªùi kh√¥ng bao gi·ªù th·∫Øng", "B·∫°n kh√¥ng bao gi·ªù bi·∫øt ƒëi·ªÅu g√¨ t·ªìi t·ªá h∆°n v·∫≠n xui m√† b·∫°n c√≥.", "C√°ch an to√†n nh·∫•t ƒë·ªÉ nh√¢n ƒë√¥i s·ªë ti·ªÅn c·ªßa b·∫°n l√† g·∫•p n√≥ l·∫°i 1 l·∫ßn v√† ƒë·ªÉ v√†o t√∫i.", "C·ªù b·∫°c l√† nguy√™n t·∫Øc v·ªën c√≥ c·ªßa b·∫£n ch·∫•t con ng∆∞·ªùi.", "ƒê√°nh ƒë·ªÅ th√¨ ch·ªâ c√≥ ra ƒë√™ m√† ·ªü", "C√°ch t·ªët nh·∫•t ƒë·ªÉ N√©m x√∫c x·∫Øc l√† n√©m ch√∫ng ƒëi v√† ƒë·ª´ng ch∆°i n·ªØa.", "ƒÇn ti·ªÅn c∆∞·ª£c c·ªßa b·∫°n nh∆∞ng ƒë·ª´ng c∆∞·ª£c ti·ªÅn ƒÉn", "√Åo qu·∫ßn b√°n h·∫øt, ng·ªìi tr·∫ßn t√¥ h√¥", "ƒê√°nh b·∫°c quen tay, ng·ªß ng√†y quen m·∫Øt, ƒÉn v·∫∑t quen m·ªìm.", "C∆∞·ª£c c√†ng √≠t, khi th·∫Øng b·∫°n c√†ng thua nhi·ªÅu", "C·ªù b·∫°c, khi·∫øn ch√∫ng ta m·∫•t hai th·ª© qu√Ω gi√° nh·∫•t c·ªßa ƒë·ªùi ng∆∞·ªùi. ƒê√≥ l√† th·ªùi gian v√† ti·ªÅn b·∫°c", "C·ªù b·∫°c ai thua, ai th·∫Øng, ai kh√¥ng th·∫Øng ƒë·ªÉ r·ªìi l·∫°i s·∫Ω thua.", "C·ªù b·∫°c c√≥ th·∫Øng c√≥ thua, th·∫Øng th√¨ √≠t m√† thua th√¨ nhi·ªÅu."];
    const { increaseMoney , decreaseMoney } = Currencies;
    const { threadID, messageID, senderID } = event;
    const { sendMessage: HakiraSEND } = api;
    var name = await Users.getNameUser(senderID)
    var money = (await Currencies.getData(senderID)).money
    var bet = parseInt((args[1] == "allin" ? money : args[1]));
    var input = args[0];
    var tong = parseInt(args[2])
    if(!input) return HakiraSEND("‚Üí B·∫°n ch∆∞a nh·∫≠p t√†i/x·ªâu/b·ªô ba gi·ªëng nhau/b·ªô ƒë√¥i gi·ªëng nhau/c∆∞·ª£c t·ªïng/c∆∞·ª£c s·ªë", threadID, messageID);
    if(!bet) return HakiraSEND("Co Dau Buoi", threadID, messageID);
    if(bet < 20) return HakiraSEND("B·∫°n c·∫ßn ƒë·∫∑t c∆∞·ª£c t·ªëi thi·ªÉu 20$", threadID, messageID);
    if(bet > money) return HakiraSEND("B·∫°n kh√¥ng ƒë·ªß ti·ªÅn ƒë·ªÉ ƒë·∫∑t c∆∞·ª£c", threadID, messageID);
    if(input == "t√†i" || input == "T√†i" || input == '-t') var choose = 't√†i'
    if(input == "x·ªâu" || input == "X·ªâu" || input == '-x') var choose = 'x·ªâu'
    if(input == 'b3gn' || input == 'bbgn' || input == 'btgn') var choose = 'b3gn'
    if(input == 'b2gn' || input == 'bdgn' || input == 'bhgn') var choose = 'b2gn'
    if(input == 'cuoctong' || input == 'ct') var choose = 'cuoctong'
    if(input == 'cuocso' || input == 'cs') var choose = 'cuocso'
    var tag = ['t√†i','x·ªâu','b3gn','b2gn','cuoctong','cuocso']
    if(!tag.includes(choose)) return HakiraSEND('Sai Tag', threadID, messageID)
    if(choose == 'cuoctong' && (tong < 4 || tong > 17)) return HakiraSEND("T·ªïng c∆∞·ª£c kh√¥ng h·ª£p l·ªá ?", threadID, messageID);
    if(choose == 'cuocso' && (tong < 1 || tong > 6)) return HakiraSEND("S·ªë ƒë∆∞·ª£c ch·ªçn kh√¥ng h·ª£p l·ªá ?", threadID, messageID);
    const number = [], img = [], bodem = 0;
    for(let i = 1; i < 4; i++){
    var n = Math.floor(Math.random() * 6 + 1) 
    number.push(n)
    var img_ = (await axios.get(encodeURI(getImage(n)), { responseType: 'stream' })).data;
    img.push(img_)
    HakiraSEND(`[ ùóßùó´ ] ‚Üí L·∫ßn ƒë·ªï x√∫c x·∫Øc th·ª© ${i}:\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nüé≤ Bot l·∫Øc ra ƒë∆∞·ª£c s·ªë: ${n}`, threadID, messageID)
      await new Promise(resolve => setTimeout(resolve, timedelay * 1000))
}
var total = number[0] + number[1] + number[2];
if(choose == 'cuocso'){
    if(number[0] == tong || number[1] == tong || number[2] == tong){
        var ans = `${tong}`
        var result = 'win'
        var mn = bet * motsogiong 
        var mne = money + mn
    }
    if(number[1] == tong && number[2] == tong || number[0] == tong && number[2] == tong || number[0] == tong && number[1] == tong){
        var ans = `${tong}`
        var result = 'win'
        var mn = bet * haisogiong
        var mne = money + mn
    }
    if(number[0] == tong && number[1] == tong && number[2] == tong){
        var ans = `${tong}`
        var result = 'win'
        var mn = bet * basogiong
        var mne = money + mn
    }
    if(number[0] != tong && number[1] != tong && number[2] != tong){
        var ans = `${tong}`
        var result = 'lose'
        var mn = bet
        var mne = money - mn
    }   
}
if(choose == 'cuoctong'){
    if(total == tong){
        var ans = "c∆∞·ª£c t·ªïng"
        var result = 'win'
        var mn = bet * parseInt((getRATE(tong)))
        var mne = money + mn
    } else {
        var ans = `${total}`
        var result = 'lose'
        var mn = bet
        var mne = money - mn
    }
}
if(choose == 'b3gn' ){
    if(number[0] == number[1] && number[1] == number[2]) {
        var ans = "b·ªô ba ƒë·ªìng nh·∫•t"
        var result = 'win'
        var mn = bet * tilethangb3dn
        var mne = money + mn
    } else {
        var ans = (total >= 11 && total <= 18 ? "t√†i" : "x·ªâu") 
        var result = 'lose'
        var mn = bet
        var mne = money - mn
    }
}
if(choose == 'b2gn'){
    if(number[0] == number[1] || number[1] == number[2] || number[0] == number[2]) {
        var ans = "b·ªô hai ƒë·ªìng nh·∫•t"
        var result = 'win'
        var mn = bet * tilethangb2dn
        var mne = money + mn
    } else {
        var ans = (total >= 11 && total <= 18 ? "t√†i" : "x·ªâu") 
        var result = 'lose'
        var mn = bet
        var mne = money - mn
    }
}
if(choose == 't√†i' || choose == 'x·ªâu') {
if(number[0] == number[1] && number[1] == number[2]){
var ans = "b·ªô ba ƒë·ªìng nh·∫•t"
} else {
var ans = (total >= 11 && total <= 18 ? "t√†i" : "x·ªâu") 
}
if(number[0] == number[1] && number[1] == number[2]) {
    var result = 'lose'
    var mn = bet
    var mne = money - mn
}
if(ans == choose) {
    var result = 'win'
    var mn = bet * tilethang
    var mne = mn + money
} else {
    var result = 'lose'
    var mn = bet
    var mne = money - mn
}
}
if(result =='lose'){
    decreaseMoney(senderID, mn)
} else if(result == 'win'){
    increaseMoney(senderID, mn)
}
var msg =   `=== [ K·∫øt Qu·∫£ T√†i X·ªâu ] ===\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ`  
            + '\n' + 
            `‚è∞ V√†o l√∫c: ${format_day}`
            + '\n' +
            `üë§ Ng∆∞·ªùi ch∆°i: ${name}`
            + '\n' +
            `üôã L·ª±a ch·ªçn: ${choose}`
            + '\n' +
            `üìå K·∫øt qu·∫£: ${ans}`
            + '\n' +
            `üé≤ X√∫c x·∫Øc 1: ${number[0]}`
            + '\n' + 
            `üé≤ X√∫c x·∫Øc 2: ${number[1]}`
            + '\n' +
            `üé≤ X√∫c x·∫Øc 3: ${number[2]}`
            + '\n' +
            `üñáÔ∏è T·ªïng ba x√∫c x·∫Øc: ${total}`
            + '\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n' +
            `ü§ë K·∫øt qu·∫£: ${(result == 'win' ? 'Th·∫Øng' : 'Thua')}`
            + '\n' +
            `üíµ Ti·ªÅn c∆∞·ª£c: ${replace(bet)}`
            + '\n' +
            `üí∂ Ti·ªÅn ${(result == 'win' ? 'Th·∫Øng' : 'Thua')}: ${replace(Math.floor(mn))}$`
            + '\n' +
            `üïµÔ∏è T√¨nh tr·∫°ng: ${(result == 'win' ? 'ƒê√£ Tr·∫£ Th∆∞·ªüng' : 'ƒê√£ Tr·ª´ Ti·ªÅn')}`
            + '\n' +
            `üí∏ S·ªë ti·ªÅn hi·ªán t·∫°i: ${replace(mne)}$`
            + '\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n' +
            `ü§∑ L·ªùi khuy√™n: ${thinh[Math.floor(Math.random() * thinh.length)]}`
            HakiraSEND({body:msg,attachment: img}, threadID, messageID)
} catch(e){
    console.log(e)
}}